{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "02 - Routing",
  "steps": [
    {
      "title": "le routing",
      "description": "The routing is the step where we extract the URL from the HTTP REQUEST to call a specific function in a controller : \r\n\r\n![Schema](./.tours/schema_1_routing.png)\r\n[Schema](./.tours/schema_1_routing.png)"
    },
    {
      "file": "src/routing.php",
      "description": "First we get the route requested by the user (which is the url without domain part).\r\n\r\nFor exemple :  \r\n`localhost/items/edit?id=5`\r\n- the domain is : `localhost`\r\n- the route is : `items/edit?id=5`\r\n\r\nThe route is easily available thanks to $_SERVER.Like $_GET or $_POST, $_SERVER is an array containing a lot of informations from your server (also see  [Doc](https://www.php.net/manual/fr/reserved.variables.server.php)). Here we get the `PATH_INFO`",
      "line": 4,
      "selection": {
        "start": {
          "line": 4,
          "character": 1
        },
        "end": {
          "line": 4,
          "character": 49
        }
      }
    },
    {
      "file": "src/routing.php",
      "selection": {
        "start": {
          "line": 7,
          "character": 1
        },
        "end": {
          "line": 7,
          "character": 55
        }
      },
      "description": "In order to know what part of the code to call, we need to get all the routes of our application. Those routes are declared in `routes.php` "
    },
    {
      "file": "src/routes.php",
      "description": "In this array, we will declare all the routes of our application.\r\nEach route will call a specific part of our code and then will show a different result.\r\n\r\nThe route's goal is to target an action of a controller.\r\n\r\nLet's take a exemple :",
      "line": 8,
      "selection": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 16,
          "character": 3
        }
      }
    },
    {
      "file": "src/routes.php",
      "selection": {
        "start": {
          "line": 11,
          "character": 5
        },
        "end": {
          "line": 11,
          "character": 12
        }
      },
      "description": "Here we have the route `items`. That means our application have the entry point :\r\n\r\n[http://localhost:8000/items/](http://localhost:8000/items/)"
    },
    {
      "file": "src/routes.php",
      "selection": {
        "start": {
          "line": 11,
          "character": 17
        },
        "end": {
          "line": 11,
          "character": 33
        }
      },
      "description": "We link this entry point to a controller : `ItemController`"
    },
    {
      "file": "src/Controller/ItemController.php",
      "selection": {
        "start": {
          "line": 7,
          "character": 1
        },
        "end": {
          "line": 7,
          "character": 48
        }
      },
      "description": "As you can see a controller is just a class, but it has a very important role : give a HTTP response to the HTTP request."
    },
    {
      "file": "src/Controller/ItemController.php",
      "selection": {
        "start": {
          "line": 12,
          "character": 4
        },
        "end": {
          "line": 90,
          "character": 6
        }
      },
      "description": "This controller already has a lot of function to call : index(), show(), edit(), ...\r\n\r\nEach function will return an HTML string (thanks to [TWIG](https://twig.symfony.com)) of a full page and will send as a response to our user.\r\n\r\nBut of course, as only one page will be return, only one function should be called."
    },
    {
      "file": "src/routes.php",
      "selection": {
        "start": {
          "line": 11,
          "character": 35
        },
        "end": {
          "line": 11,
          "character": 42
        }
      },
      "description": "And that's the job of this second parameter. \n\nHere, we declare that if someone ask for the route `items` (aka [http://localhost:8000/items/](http://localhost:8000/items/)). The executed code will be ..."
    },
    {
      "file": "src/Controller/ItemController.php",
      "selection": {
        "start": {
          "line": 12,
          "character": 5
        },
        "end": {
          "line": 18,
          "character": 6
        }
      },
      "description": "... This one !\n\nNow let's see how to create a controller.\n"
    }
  ]
}